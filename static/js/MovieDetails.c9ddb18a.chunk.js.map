{"version":3,"file":"static/js/MovieDetails.c9ddb18a.chunk.js","mappings":"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","sources":["components/LoadSpinner/LoadSpinner.styled.js","components/LoadSpinner/LoadSpinner.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","hooks/useLoader.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/MovieInfo/MovieCard/MovieCard.styled.js","components/MovieInfo/MovieCard/MovieCard.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\nimport { ImSpinner9 } from 'react-icons/im';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(359deg);\n  }\n`;\n\nexport const LoadingIcon = styled(ImSpinner9)`\n  display: block;\n  width: 60px;\n  height: 60px;\n  margin: 30px auto;\n  color: #7a82b5;\n\n  animation: ${rotate} 1s linear infinite;\n`;\n","import { LoadingIcon } from './LoadSpinner.styled';\n\nfunction LoadSpinner() {\n  return <LoadingIcon />;\n}\n\nexport default LoadSpinner;\n","import styled from 'styled-components';\n\nexport const Container = styled.p`\n  margin: 0;\n  font-size: 20px;\n  font-weight: 400;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './Notification.styled';\n\nfunction Notification({ message }) {\n  return <Container>{message}</Container>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState, useEffect } from 'react';\n\nimport LoadSpinner from 'components/LoadSpinner';\nimport Notification from 'components/Notification';\n\nconst STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction useLoader({ callback, initData }) {\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [data, setData] = useState(initData);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      setStatus(STATUS.PENDING);\n      try {\n        const data = await callback();\n        setData(data);\n        setStatus(STATUS.RESOLVED);\n      } catch (error) {\n        setStatus(STATUS.REJECTED);\n        setError(error);\n      }\n    })();\n  }, [callback]);\n\n  const Loader = () => {\n    if (status === STATUS.PENDING) {\n      return <LoadSpinner />;\n    }\n\n    if (status === STATUS.REJECTED) {\n      return <Notification message={error.message} />;\n    }\n\n    return null;\n  };\n\n  return { data, isLoaded: status === STATUS.RESOLVED, Loader };\n}\n\nexport default useLoader;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n  padding: 6px 2px;\n  border: none;\n  font-size: 18px;\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgba(204, 204, 204, 0.5);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nfunction Button({ onClick, children }) {\n  return (\n    <ButtonStyled type=\"button\" onClick={onClick}>\n      {children}\n    </ButtonStyled>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 250px 1fr;\n  gap: 10px;\n  padding: 15px 0;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.3em;\n  font-weight: 600;\n  margin: 10px 0 20px;\n`;\n\nexport const SubTitle = styled.h3`\n  font-size: 1.1em;\n  font-weight: 600;\n  margin: 10px 0 20px;\n`;\n\nexport const Text = styled.p`\n  margin: 1em 0;\n  padding-left: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport { IMG_URL_BASE } from 'services/api';\nimport { Container, Title, SubTitle, Text } from './MovieCard.styled';\n\nfunction MovieCard({ movie }) {\n  const {\n    poster_path: posterImg,\n    title,\n    overview,\n    vote_average,\n    genres,\n  } = movie;\n  const votePercent = Math.trunc(vote_average * 10) + '%';\n  const genresString = genres\n    .reduce((sum, genre) => [...sum, genre.name], [])\n    .join(' ');\n\n  return (\n    <Container>\n      <img src={`${IMG_URL_BASE}/${posterImg}`} alt={`${title}`} />\n\n      <div>\n        <Title>{title}</Title>\n        <Text>User score: {votePercent}</Text>\n        <SubTitle>Overview</SubTitle>\n        <Text>{overview}</Text>\n        <SubTitle>Genres</SubTitle>\n        <Text>{genresString}</Text>\n      </div>\n    </Container>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ).isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin: 0 0 20px 0;\n  padding: 0 0 10px 30px;\n  border-bottom: 1px solid #ccc;\n  list-style: none;\n`;\n","import PropTypes from 'prop-types';\nimport MovieCard from 'components/MovieInfo/MovieCard';\nimport NavigationLink from 'components/NavigationLink';\nimport { List } from './MovieInfo.styled';\n\nfunction MovieInfo({ movie, location }) {\n  return (\n    <>\n      <MovieCard movie={movie} />\n      <p>Additional information</p>\n      <List>\n        <li>\n          <NavigationLink to=\"cast\" label=\"Cast\" state={{ from: location }} />\n        </li>\n        <li>\n          <NavigationLink\n            to=\"reviews\"\n            label=\"Reviews\"\n            state={{ from: location }}\n          />\n        </li>\n      </List>\n    </>\n  );\n}\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MovieInfo;\n","import { lazy, Suspense, useCallback } from 'react';\nimport {\n  Routes,\n  Route,\n  useParams,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\n\nimport { fetchMovieDetails } from 'services/api';\nimport useLoader from 'hooks/useLoader';\nimport Section from 'components/Section';\nimport Button from 'components/Button';\nimport MovieInfo from 'components/MovieInfo';\n\nconst Cast = lazy(() => import('pages/Cast' /* webpackChunkName: \"Cast\" */));\nconst Reviews = lazy(() =>\n  import('pages/Reviews' /* webpackChunkName: \"Reviews\" */)\n);\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const prevLocation = location.state?.from\n    ? { ...location.state.from }\n    : { ...location, pathname: '/' };\n\n  const fetch = useCallback(async () => fetchMovieDetails(movieId), [movieId]);\n\n  const { data, isLoaded, Loader } = useLoader({\n    callback: fetch,\n    initData: null,\n  });\n\n  function goBack() {\n    navigate(prevLocation.pathname, {\n      state: { from: prevLocation },\n    });\n  }\n\n  return (\n    <Section title=\"Movie details\">\n      <Button type=\"button\" onClick={goBack}>\n        <FaLongArrowAltLeft />\n        Go back\n      </Button>\n\n      {isLoaded && <MovieInfo movie={data} location={prevLocation} />}\n\n      <Loader />\n\n      <Suspense fallback={<Section>Loading...</Section>}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </Section>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  method: 'get',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '157707c22d4cc8eeebe0477c49922db6',\n    params: { page: 1 },\n  },\n});\n\nexport async function fetchAllMovies() {\n  const { data } = await axiosInstance({\n    url: '/trending/movie/day',\n  });\n\n  return data.results;\n}\n\nexport async function fetchFilteredMovies(query) {\n  const { data } = await axiosInstance({\n    url: '/search/movie',\n    params: {\n      query,\n    },\n  });\n\n  if (data.results.length === 0) {\n    throw new Error(`Not found for request: \"${query}\"`);\n  }\n\n  return data.results;\n}\n\nexport async function fetchMovieDetails(moveID) {\n  const { data } = await axiosInstance({\n    url: `/movie/${moveID}`,\n  });\n  return data;\n}\n\nexport async function fetchMovieCredits(moveID) {\n  const { data } = await axiosInstance({\n    url: `/movie/${moveID}/credits`,\n  });\n  return data.cast.slice(0, 15);\n}\n\nexport async function fetchMovieReviews(moveID) {\n  const { data } = await axiosInstance({\n    url: `/movie/${moveID}/reviews`,\n  });\n\n  if (data.results.length === 0) {\n    throw new Error('We don`t have any reviews for this movie');\n  }\n\n  return data.results;\n}\n\nexport function transfromResponse(items, baseURL = '') {\n  return items.map(item => ({\n    key: item.id,\n    label: item.title,\n    toLink: `${baseURL}${item.id}`,\n  }));\n}\n\nexport const IMG_URL_BASE = 'https://image.tmdb.org/t/p/w500';\n"],"names":["rotate","keyframes","LoadingIcon","styled","ImSpinner9","Container","message","STATUS","callback","initData","useState","status","setStatus","data","setData","error","setError","useEffect","isLoaded","Loader","ButtonStyled","onClick","children","type","Title","SubTitle","Text","movie","posterImg","poster_path","title","overview","vote_average","genres","votePercent","Math","trunc","genresString","reduce","sum","genre","name","join","src","IMG_URL_BASE","alt","List","location","NavigationLink","to","label","state","from","Cast","lazy","Reviews","movieId","useParams","useLocation","navigate","useNavigate","prevLocation","pathname","fetch","useCallback","fetchMovieDetails","useLoader","Section","Suspense","fallback","path","element","axiosInstance","axios","method","baseURL","params","api_key","page","fetchAllMovies","url","results","fetchFilteredMovies","query","length","Error","moveID","fetchMovieCredits","cast","slice","fetchMovieReviews","transfromResponse","items","map","item","key","id","toLink"],"sourceRoot":""}