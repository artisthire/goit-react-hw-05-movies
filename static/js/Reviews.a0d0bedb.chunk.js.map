{"version":3,"file":"static/js/Reviews.a0d0bedb.chunk.js","mappings":"0OAiCA,UA3BA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAQC,EAAAA,EAAAA,cAAW,iBAAC,wGAAYC,EAAAA,EAAAA,IAAkBJ,IAA9B,2CAAwC,CAACA,IAEnE,GAAmCK,EAAAA,EAAAA,GAAU,CAC3CC,SAAUJ,EACVK,SAAU,KAFJC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,OAKxB,OACE,UAAC,IAAD,WACGD,IACC,wBACGD,EAAKG,KAAI,SAAAC,GAAM,OACd,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,UAOtB,SAACL,EAAD","sources":["pages/Reviews.jsx"],"sourcesContent":["import { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\nimport useLoader from 'hooks/useLoader';\nimport Section from 'components/Section';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n\n  const fetch = useCallback(async () => fetchMovieReviews(movieId), [movieId]);\n\n  const { data, isLoaded, Loader } = useLoader({\n    callback: fetch,\n    initData: [],\n  });\n\n  return (\n    <Section>\n      {isLoaded && (\n        <ul>\n          {data.map(review => (\n            <li key={review.id}>\n              <h4>Author: {review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Loader />\n    </Section>\n  );\n}\n\nexport default Reviews;\n"],"names":["movieId","useParams","fetch","useCallback","fetchMovieReviews","useLoader","callback","initData","data","isLoaded","Loader","map","review","author","content","id"],"sourceRoot":""}